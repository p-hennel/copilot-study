name: build-docker

permissions:
  contents: read
  pages: write
  packages: write
  id-token: write
  attestations: write
  checks: write
  deployments: write


on:
  push:
    branches:
      - 'releases/**'
    tags:
      - 'v**'

jobs:
  docker:
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            phennel/copilot-study
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr

      - name: Docker meta
        id: metaghcr
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/p-hennel/copilot-study
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: true
#          provenance: false

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push image to GHCR
        run: |
          docker buildx imagetools create \
            --tag ${{ join(fromJSON(steps.metaghcr.outputs.json).tags, ' --tag ') }} \
            phennel/copilot-study:latest
#            --annotation ${{ join(fromJSON(steps.metaghcr.outputs.json).annotations, ' --annotation ') }} \

#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v2
#        with:
#          subject-name: phennel/copilot-study
#          subject-digest: ${{ steps.build_and_push.outputs.digest }}
#          push-to-registry: true
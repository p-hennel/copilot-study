name: build-docker

permissions:
  contents: read
  pages: write
  packages: write
  id-token: write
  attestations: write
  checks: write
  deployments: write

on:
  workflow_dispatch:
  push:
    tags:
      - '*.*.*'

jobs:
  docker_build:
    strategy:
      matrix:
        data:
          - os: 'ubuntu-24.04'
            arch: 'amd64'
          - os: 'ubuntu-24.04-arm'
            arch: 'arm64'
    runs-on: ${{ matrix.data.os }}
    outputs:
      tags_hub: "${{ join(steps.gen_output.outputs.tags_hub_x86, ',') }},${{ join(steps.gen_output.outputs.tags_hub_arm64, ',') }}"
      tags_ghcr: "${{ [oin(steps.gen_output.outputs.tags_ghcr_x86, ',') }},${{ join(steps.gen_output.outputs.tags_ghcr_arm64, ',') }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

#      - uses: actions/cache@v4
#        with:
#          path: |
#            ~/.bun/install/cache
#          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: metahub
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=auto
            suffix=-${{ matrix.data.arch }}
          images: |
            phennel/copilot-study
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr,
            type=edge,branch=main,
            type=sha,
            
      - name: Docker meta
        id: metaghcr
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=auto
            suffix=-${{ matrix.data.arch }}
          images: |
            ghcr.io/p-hennel/copilot-study
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr,
            type=edge,branch=main,
            type=sha,

      - name: Generate output
        id: gen_output
        run: |
          tags_hub="${{ join(steps.metahub.outputs.tags, ',') }}"
          tags_ghcr="${{ join(steps.metaghcr.outputs.tags, ',') }}"
          arch="${{ matrix.data.arch }}"
          echo "tags_hub_${arch}=${tags_hub}" >> "$GITHUB_OUTPUT"
          echo "tags_ghcr_${arch}=${tags_ghcr}" >> "$GITHUB_OUTPUT"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: build_and_push
        uses: docker/build-push-action@v6
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
          labels: ${{ env.DOCKER_METADATA_OUTPUT_LABELS }}
          #sbom: true
          provenance: false
          outputs: type=registry,oci-mediatypes=true,oci-artifact=true
          # provenance: mode=max

      - name: Shoutrrr
        uses: containrrr/shoutrrr-action@v1
        with:
          url: ${{ secrets.SHOUTRRR_URL }}
          title: Built and pushed phennel/copilot-study (${{ matrix.data.arch }})
          message: |
            ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
            ${{ env.GITHUB_SERVER_URL}}/${{ env.GITHUB_REPOSITORY }}/actions/runs/${{ env.GITHUB_RUN_ID }}

  manifest_merge:
    runs-on: ubuntu-24.04
    needs: [docker_build]
    steps:
      - name: Docker meta
        id: metahub
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=auto
          images: |
            phennel/copilot-study
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@master 
        with:
          inputs: ${{ join(fromJSON(steps.metahub.outputs.json).tags, ',') }}
          images: ${{ needs.docker_build.outputs.tags_hub }}
          push: true
      
      - name: Docker meta
        id: metaghcr
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=auto
          images: |
            ghcr.io/p-hennel/copilot-study
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@master 
        with:
          inputs: ${{ join(fromJSON(steps.metaghcr.outputs.json).tags, ',') }}
          images: ${{ needs.docker_build.outputs.tags_ghcr }}
          push: true

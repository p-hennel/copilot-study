name: build-docker

permissions:
  contents: read
  pages: write
  packages: write
  id-token: write
  attestations: write
  checks: write
  deployments: write

on:
  workflow_dispatch:
  push:
    tags:
      - "*.*.*"

jobs:
  docker_build:
    strategy:
      matrix:
        data:
          - os: "ubuntu-24.04"
            arch: "amd64"
    #          - os: 'ubuntu-24.04-arm'
    #            arch: 'arm64'
    runs-on: ${{ matrix.data.os }}
    outputs:
      tags_hub: "${tags_hub_x86},${tags_hub_arm64}"
    env:
      tags_hub_x86: ""
      tags_hub_arm64: ""
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      #      - uses: actions/cache@v4
      #        with:
      #          path: |
      #            ~/.bun/install/cache
      #          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: metahub
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=auto
          #            suffix=-${{ matrix.data.arch }}
          images: |
            phennel/copilot-study
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr,
            type=edge,branch=main,
            type=sha,

      - name: Extract tags
        id: gen-output
        run: |
          tags_hub="${{ join(fromJSON(env.DOCKER_METADATA_OUTPUT_JSON).tags, ',') }}"
          arch="${{ matrix.data.arch }}"
          echo "tags_hub_${arch}=${tags_hub}" >> "$GITHUB_OUTPUT"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: build_and_push
        uses: docker/build-push-action@v6
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
          labels: ${{ env.DOCKER_METADATA_OUTPUT_LABELS }}
          sbom: true
          provenance: mode=max
          outputs: type=registry,oci-mediatypes=true,oci-artifact=true

      - name: Shoutrrr
        uses: containrrr/shoutrrr-action@v1
        with:
          url: ${{ secrets.SHOUTRRR_URL }}
          title: Built and pushed phennel/copilot-study (${{ matrix.data.arch }})
          message: |
            ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
            ${{ env.GITHUB_SERVER_URL}}/${{ env.GITHUB_REPOSITORY }}/actions/runs/${{ env.GITHUB_RUN_ID }}

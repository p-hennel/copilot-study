# Socket Communication System - Production Environment Configuration
#
# This file contains all socket-related environment variables for production.
# Copy this file to .env.production and adjust values for your production environment.
# SECURITY: Keep this file secure and never commit actual production values!

# ============================================================================
# CONNECTION SETTINGS
# ============================================================================

# Socket file path for Unix domain socket communication
# Use a secure system location with proper permissions
SOCKET_PATH=/var/run/copilot-study/crawler.sock

# Maximum number of concurrent crawler connections
# Adjust based on expected crawler instances and server capacity
SOCKET_MAX_CONNECTIONS=20

# Connection timeout in milliseconds (2 minutes for production)
SOCKET_CONNECTION_TIMEOUT=120000

# Connection backlog for incoming connections
SOCKET_BACKLOG=511

# ============================================================================
# SECURITY SETTINGS
# ============================================================================

# Allowed origins for connections (if using TCP)
# SOCKET_ALLOWED_ORIGINS=https://copilot-study.example.com,https://admin.example.com

# Maximum message size in bytes (5MB for production)
SOCKET_MAX_MESSAGE_SIZE=5242880

# Message buffer size in bytes (1MB)
SOCKET_MESSAGE_BUFFER_SIZE=1048576

# Enable connection authentication
SOCKET_ENABLE_AUTH=true

# Connection rate limiting (messages per minute per connection)
SOCKET_RATE_LIMIT=100

# ============================================================================
# HEARTBEAT AND HEALTH MONITORING
# ============================================================================

# Heartbeat interval in milliseconds (1 minute for production)
SOCKET_HEARTBEAT_INTERVAL=60000

# Heartbeat timeout in milliseconds (3 minutes)
SOCKET_HEARTBEAT_TIMEOUT=180000

# Health check interval in milliseconds (1 minute)
SOCKET_HEALTH_CHECK_INTERVAL=60000

# ============================================================================
# JOB PROCESSING
# ============================================================================

# Maximum concurrent jobs per crawler
SOCKET_MAX_CONCURRENT_JOBS=10

# Job queue size
SOCKET_JOB_QUEUE_SIZE=200

# Job timeout in milliseconds (2 hours for production)
SOCKET_JOB_TIMEOUT=7200000

# Retry attempts for failed operations
SOCKET_RETRY_ATTEMPTS=5

# Retry delay in milliseconds
SOCKET_RETRY_DELAY=10000

# Maximum retry delay with exponential backoff
SOCKET_MAX_RETRY_DELAY=60000

# ============================================================================
# LOGGING AND MONITORING
# ============================================================================

# Log level for socket operations
# Use 'info' for production, 'warn' for minimal logging
SOCKET_LOG_LEVEL=info

# Enable metrics collection
SOCKET_ENABLE_METRICS=true

# Metrics collection interval in milliseconds (1 minute)
SOCKET_METRICS_INTERVAL=60000

# Enable stack traces in error logs
SOCKET_ENABLE_STACK_TRACES=false

# ============================================================================
# DATABASE SETTINGS
# ============================================================================

# Database connection pool size
# Scale based on concurrent job processing needs
DATABASE_CONNECTION_POOL=25

# Database query timeout in milliseconds
SOCKET_QUERY_TIMEOUT=45000

# Database transaction timeout in milliseconds
SOCKET_TRANSACTION_TIMEOUT=120000

# ============================================================================
# CLEANUP AND MAINTENANCE
# ============================================================================

# Cleanup interval in milliseconds (1 hour)
SOCKET_CLEANUP_INTERVAL=3600000

# Maximum job age before cleanup (7 days)
SOCKET_MAX_JOB_AGE=604800000

# Maximum error log age before cleanup (30 days)
SOCKET_MAX_ERROR_LOG_AGE=2592000000

# Maximum connection state age before cleanup (1 day)
SOCKET_MAX_CONNECTION_STATE_AGE=86400000

# ============================================================================
# PERFORMANCE OPTIMIZATION
# ============================================================================

# Enable connection pooling
SOCKET_ENABLE_CONNECTION_POOLING=true

# Connection keep-alive settings
SOCKET_KEEP_ALIVE=true
SOCKET_KEEP_ALIVE_INITIAL_DELAY=60000

# Enable message compression for large payloads
SOCKET_ENABLE_COMPRESSION=true

# Buffer optimization
SOCKET_BUFFER_OPTIMIZE=true

# ============================================================================
# ERROR HANDLING AND NOTIFICATIONS
# ============================================================================

# Enable error notifications
SOCKET_ENABLE_ERROR_NOTIFICATIONS=true

# Critical error notification threshold (errors per hour)
SOCKET_CRITICAL_ERROR_THRESHOLD=10

# Error notification cooldown (prevent spam)
SOCKET_NOTIFICATION_COOLDOWN=300000

# Email notification settings (configure your SMTP)
# SOCKET_SMTP_HOST=smtp.example.com
# SOCKET_SMTP_PORT=587
# SOCKET_SMTP_USER=alerts@example.com
# SOCKET_SMTP_PASS=your-smtp-password
# SOCKET_ADMIN_EMAIL=admin@example.com

# Slack notification webhook (optional)
# SOCKET_SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# ============================================================================
# MONITORING INTEGRATION
# ============================================================================

# Prometheus metrics endpoint
SOCKET_ENABLE_PROMETHEUS=true
SOCKET_PROMETHEUS_PORT=9090

# Health check endpoint
SOCKET_HEALTH_CHECK_PATH=/health/socket

# Status endpoint for monitoring
SOCKET_STATUS_ENDPOINT_ENABLED=true

# ============================================================================
# BACKUP AND RECOVERY
# ============================================================================

# Enable progress state backup
SOCKET_ENABLE_PROGRESS_BACKUP=true

# Progress backup interval in milliseconds (5 minutes)
SOCKET_PROGRESS_BACKUP_INTERVAL=300000

# Maximum backup files to retain
SOCKET_MAX_BACKUP_FILES=100

# ============================================================================
# PRODUCTION DEPLOYMENT SETTINGS
# ============================================================================

# Process management
SOCKET_PROCESS_TITLE=copilot-study-socket

# PID file location
SOCKET_PID_FILE=/var/run/copilot-study/socket.pid

# User and group for socket server process
SOCKET_USER=copilot-study
SOCKET_GROUP=copilot-study

# File permissions for socket file
SOCKET_FILE_MODE=0660

# Directory permissions
SOCKET_DIR_MODE=0750

# ============================================================================
# ENVIRONMENT VALIDATION
# ============================================================================

# Require production environment
NODE_ENV=production

# Validate all required environment variables are set
SOCKET_VALIDATE_CONFIG=true

# Fail fast on configuration errors
SOCKET_STRICT_CONFIG=true

# ============================================================================
# EXAMPLE USAGE
# ============================================================================

# 1. Copy this file to your production environment:
#    cp src/lib/server/socket/config/production.env .env.production
#
# 2. Update all placeholder values with actual production settings
#
# 3. Secure the file:
#    chmod 600 .env.production
#    chown copilot-study:copilot-study .env.production
#
# 4. Load in your application:
#    import { config } from 'dotenv';
#    config({ path: '.env.production' });
#
# 5. Start with process manager:
#    pm2 start ecosystem.config.js --env production
#
# 6. Monitor logs:
#    tail -f /var/log/copilot-study/socket.log

# ============================================================================
# SECURITY CHECKLIST
# ============================================================================

# □ Socket path is in secure directory with proper permissions
# □ Database credentials are properly secured
# □ SMTP credentials are encrypted/secured
# □ File permissions are restrictive (600 for env files)
# □ Process runs under dedicated user account
# □ Firewall rules are configured appropriately
# □ Log files are secured and rotated
# □ Backup files are encrypted and secured
# □ Monitoring and alerting are configured
# □ Error notifications are tested

# ============================================================================
# PERFORMANCE TUNING NOTES
# ============================================================================

# For high-throughput environments:
# - Increase SOCKET_MAX_CONNECTIONS (20-50)
# - Increase DATABASE_CONNECTION_POOL (25-50)
# - Reduce SOCKET_HEARTBEAT_INTERVAL (30000)
# - Increase SOCKET_MAX_CONCURRENT_JOBS (10-20)
# - Enable SOCKET_ENABLE_COMPRESSION=true
#
# For resource-constrained environments:
# - Decrease SOCKET_MAX_CONNECTIONS (5-10)
# - Decrease DATABASE_CONNECTION_POOL (10-15)
# - Increase SOCKET_HEARTBEAT_INTERVAL (120000)
# - Decrease SOCKET_MAX_CONCURRENT_JOBS (3-5)
# - Reduce buffer sizes

# ============================================================================
# MONITORING AND ALERTING
# ============================================================================

# Key metrics to monitor:
# - socket_connections_total
# - socket_messages_processed_total
# - socket_errors_total
# - socket_job_processing_duration_seconds
# - socket_database_query_duration_seconds
# - socket_memory_usage_bytes
#
# Critical alerts:
# - Socket server down
# - High error rate (>5% in 5 minutes)
# - Connection pool exhaustion
# - Database connection failures
# - Memory usage above 80%
# - Disk space below 20%